### Figure 5

library(Matrix) 
library(flowCore) 
library(CATALYST) 
library(ggplot2) 
library(SingleCellExperiment)
library(dplyr)

# Specify directories
setwd("...") # Ensure this path is correct
file_paths <- list(paste0(getwd(),"/"))

# Name file_paths
names(file_paths) <- file_paths

# Search for all files in the specified directories and extract files by a given extension
files_list          <- lapply(file_paths, list.files, recursive=TRUE)
files_by_ext        <- lapply(files_list, function(x){x[endsWith(x, suffix=".fcs")]} )

# Get complete paths to all files
all_file_paths      <- unlist(lapply(seq_along(files_by_ext), function(x) {  paste(names(files_by_ext[x]), files_by_ext[[x]], sep="") } ))
names(all_file_paths) <- lapply(strsplit(all_file_paths,split="/"), function(x) { sub(".fcs","",x[length(x)]) } )
file_names <- unname(unlist(lapply(strsplit(unlist(files_by_ext),split = "/"),tail,1)))

# Read the FCS files
data_list <- list()
fcs.par <- list()
for (i in 1:length(file_names)) {
  data_list[[i]] <- read.FCS(as.character(all_file_paths[i]), alter.names = TRUE)
  fcs.par[[i]] <- as.character(data_list[[i]]@parameters@data$name)
}

# Find all the acquired parameters
common.par <- Reduce(intersect, fcs.par)
# Remove FSC, SSC and time parameters
common.par <- common.par[7:22] 

# Subset the FCS files for fluorescent markers
dir.create(paste0(getwd(),"/subset/"), showWarnings = FALSE) # Added showWarnings = FALSE
sub_data_list <- list()
subset_file_names <- list()

for (i in 1:length(file_names)) {
  sub_data_list[[i]] <- data_list[[i]][,common.par]
  write.FCS(sub_data_list[[i]] , paste(getwd(),"/subset/",paste(sub(".fcs","",file_names[[i]]),"_subset",".fcs", sep = ""), sep = ""))
  subset_file_names[[i]] <- paste(sub(".fcs","",file_names[[i]]),"_subset",".fcs", sep = "")
}

# Read the subset FCS files into a flowSet
fs <- read.flowSet(path = paste0(getwd(),"/subset/"))

# Create patient and sample annotations 
md <- data.frame(file_name = as.character(unlist(subset_file_names)), stringsAsFactors = FALSE)
md$date <- 
md$patient <- 
md$condition <- 
md$sample_id <- 
md$patientcondition <- 

# Convert to factors for CATALYST
md$patient <- factor(md$patient, levels = unique(md$patient))
md$patientcondition <- factor(md$patientcondition, levels = unique(md$patientcondition))
md$condition <- factor(md$condition, levels = unique(md$condition))
md$date <- factor(md$date, levels = unique(md$date))


# Create panel annotations
panel <- data.frame(as.character(sub_data_list[[1]]@parameters@data$name),as.character(sub_data_list[[1]]@parameters@data$desc))
rownames(panel) <- c(1:dim(panel)[1])
panel$marker_class <- c("type")
colnames(panel) <- c("fcs_colname", "antigen", "marker_class")
panel[grep("TET|CD4",panel$antigen),]$marker_class <- c("state")
panel[grep("CD45RA",panel$antigen),]$marker_class <- c("type")

# create single cell experiment
sce <- prepData(
  fs,
  panel = panel,
  md = md,
  md_cols = list(file = "file_name", id = "sample_id", factors = c("date", "patient", "condition", "patientcondition")),
  features = panel$fcs_colname,
  transform = TRUE,
  cofactor = 150,
  by_time = F, FACS = T
)


# Run and plot t-SNE on at most 100 cells per sample
set.seed(1234)
sce <- runDR(sce, "TSNE", features = "type", cells = 100)

plotDR(sce, "TSNE", color_by = "condition",  ncol = 4) + geom_point(size=2) +
  scale_color_manual(values = c("#FF6464", "#B40000", "#FFD2D2"))

plotDR(sce, "TSNE", color_by = "condition",  ncol = 4) + geom_point(size=2) +
  scale_color_manual(values = c("grey90", "grey90", "grey90",
                                "grey90", # R2Y
                                "grey90", # R7Y
                                "red", # RBL
                                "grey90", # RBL2
                                "grey90", # RdT
                                "grey90", # RL
                                "grey90", # REOT
                                "grey90")) + # REOT2
  theme(legend.position = "none",  # Removes legend
        axis.text.x = element_blank(),  # Removes x-axis numbers
        axis.text.y = element_blank(),  # Removes y-axis numbers
        axis.title.x = element_blank(), # Removes x-axis title
        axis.title.y = element_blank()) # Removes y-axis title

# Plot expression
cdx <- rownames(sce)[c(1,2,3,5,6,7,8,9,10,11,12,14,15,16)] 
plotDR(sce, "TSNE", scale = T, color_by = cdx, ncol = 4, a_pal = rev(hcl.colors(10, "Spectral"))) + geom_point(size=1.5)
