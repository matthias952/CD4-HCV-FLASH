library(ggplot2)
library(Seurat)
library(dplyr)

# Import raw Seurat Object
hcv.flashseq <- readRDS(file =
      ".../hcv_flashseq_cd4_A1P12.rds")

## General QC
# Feature counts and mitochondrial gene content
hcv.flashseq[["percent.mt"]] <- PercentageFeatureSet(hcv.flashseq, pattern = "^MT-")

# Inspect raw data
VlnPlot(hcv.flashseq, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)

# Filter out using 600 and 3500 features as cut-offs
hcv.flashseq <- subset(hcv.flashseq, subset = nFeature_RNA > 600 & nFeature_RNA < 3500 & percent.mt < 50 & nCount_RNA < 1000000) 

# Initial clustering & UMAP visualization
hcv.flashseq <- NormalizeData(hcv.flashseq, normalization.method = "LogNormalize", scale.factor = 10000)
hcv.flashseq <- FindVariableFeatures(hcv.flashseq, selection.method = "vst", nfeatures = 2000)
hcv.flashseq <- ScaleData(hcv.flashseq, vars.to.regress = c("percent.mt", "nFeature_RNA"), features = rownames(hcv.flashseq))
hcv.flashseq <- RunPCA(hcv.flashseq, features = VariableFeatures(object = hcv.flashseq))
ElbowPlot(hcv.flashseq, ndims = 50)
hcv.flashseq <- FindNeighbors(hcv.flashseq, dims = 1:20)
hcv.flashseq <- FindClusters(hcv.flashseq, resolution = 0.8, algorithm = 1)
table(hcv.flashseq@meta.data$seurat_clusters)
hcv.flashseq <- RunUMAP(hcv.flashseq, dims = 1:20, n.neighbors = 20, min.dist = 0.0001)

# Inspect results
DimPlot(hcv.flashseq, reduction = "umap", label = F, label.box = F, pt.size = 1.3, group.by = "seurat_clusters", order = F)

# Check for low quality and contaminating clusters
VlnPlot(hcv.flashseq, group.by = "seurat_clusters", ncol = 5, features = c("nFeature_RNA", "percent.mt", "CD3E", "CD3D", "CD3G", # general QC markers
                                                                 "CD14", "S100A8", "S100A9", "MS4A7", "FCN1", # monocytes
                                                                 "CD19", "MS4A1", "BANK1", "EBF1", "PAX5", # B cells
                                                                 "PPBP", "PF4", "ITGA2B", "ITGB3", "GP1BA", # Platelets
                                                                 "TRDC", "TRGC1", "TRGC2")) # gd T cells

## Remove clusters
# Cluster 3 is low quality cells
# Cluster 6 and 7 are contamination (B cells)
subset_hcv.flashseq <- subset(hcv.flashseq, subset = seurat_clusters %in% c("0", "1", "2", "4", "5"))

## Downstream analysis
# Remove TCR, ribosomal and mitochondrial genes
genes_to_remove <- grep(pattern = "^(RPL|RPS|MT-)|(^TR[ABDG][VDJ])",
                        x = rownames(hcv.flashseq),
                        value = TRUE)
hcv.flashseq <- hcv.flashseq[ ! rownames(hcv.flashseq) %in% genes_to_remove, ]

## Subsetting and scaling
# Figure 1, 2 and 6
all_hcv.flashseq <- hcv.flashseq
# Figure 3
chronic_hcv.flashseq <- subset(hcv.flashseq, subset = Timepoint %in% c("BL", "FU"))
# Figure 4
baseline_hcv.flashseq <- subset(hcv.flashseq, subset = Timepoint == "BL")

seurat_objects <- list(
  all = all_hcv.flashseq,
  baseline = baseline_hcv.flashseq,
  bl_fu = chronic_hcv.flashseq
)

for (name in names(seurat_objects)) {
  obj <- seurat_objects[[name]]
  obj <- NormalizeData(obj, normalization.method = "LogNormalize", scale.factor = 10000)
  obj <- FindVariableFeatures(obj, selection.method = "vst", nfeatures = 2000)
  
  # Regress out mitochondrial content and feature counts
  obj <- ScaleData(obj, vars.to.regress = c("percent.mt", "nFeature_RNA"), features = rownames(obj))
  obj <- RunPCA(obj, features = VariableFeatures(object = obj))
  seurat_objects[[name]] <- obj
}

# Save Seurat objects
saveRDS(seurat_objects$all, file = ".../hcv_flashseq_all.rds")
saveRDS(seurat_objects$baseline, file = ".../hcv_flashseq_bl.rds")
saveRDS(seurat_objects$bl_fu, file = ".../hcv_flashseq_blfu.rds")
